<!DOCTYPE html >
<html>
  <head>
     <title>Bar Chart</title>
     <script type="text/javascript" src="d3/d3.v2.min.js"></script>
  </head>
  <body>
    <div id="chart"></div>
    <script type="text/javascript"></script>
	<script>
	
	function renderChart() {

	var data = d3.csv.parse(d3.select('#csv').text());
	var valueLabelWidth = 40; // space reserved for value labels (right)
	var barHeight = 20; // height of one bar
	var barLabelWidth = 100; // space reserved for bar labels
	var barLabelPadding = 5; // padding between bar and bar labels (left)
	var gridLabelHeight = 18; // space reserved for gridline labels
	var gridChartOffset = 3; // space between start of grid and first bar
	var maxBarWidth = 420; // width of the bar with the max value
 
// accessor functions 
	var barLabel = function(d) { return d['STATE']; };
	var barValue = function(d) { return parseFloat(d['PER']); };
 
// scales
	var yScale = d3.scale.ordinal().domain(d3.range(0, data.length)).rangeBands([0, data.length * barHeight]);
	var y = function(d, i) { return yScale(i); };
	var yText = function(d, i) { return y(d, i) + yScale.rangeBand() / 2; };
	var x = d3.scale.linear().domain([0, d3.max(data, barValue)]).range([0, maxBarWidth]);
// svg container element
var chart = d3.select('#chart').append("svg")
  .attr('width', maxBarWidth + barLabelWidth + valueLabelWidth)
  .attr('height', gridLabelHeight + gridChartOffset + data.length * barHeight);
// grid line labels
var gridContainer = chart.append('g')
  .attr('transform', 'translate(' + barLabelWidth + ',' + gridLabelHeight + ')'); 
gridContainer.selectAll("text").data(x.ticks(10)).enter().append("text")
  .attr("x", x)
  .attr("dy", -3)
  .attr("text-anchor", "middle")
  .text(String);
// vertical grid lines
gridContainer.selectAll("line").data(x.ticks(10)).enter().append("line")
  .attr("x1", x)
  .attr("x2", x)
  .attr("y1", 0)
  .attr("y2", yScale.rangeExtent()[1] + gridChartOffset)
  .style("stroke", "#ccc");
// bar labels
var labelsContainer = chart.append('g')
  .attr('transform', 'translate(' + (barLabelWidth - barLabelPadding) + ',' + (gridLabelHeight + gridChartOffset) + ')'); 
labelsContainer.selectAll('text').data(data).enter().append('text')
  .attr('y', yText)
  .attr('stroke', 'none')
  .attr('fill', 'black')
  .attr("dy", ".35em") // vertical-align: middle
  .attr('text-anchor', 'end')
  .text(barLabel);
// bars
var barsContainer = chart.append('g')
  .attr('transform', 'translate(' + barLabelWidth + ',' + (gridLabelHeight + gridChartOffset) + ')'); 
barsContainer.selectAll("rect").data(data).enter().append("rect")
  .attr('y', y)
  .attr('height', yScale.rangeBand())
  .attr('width', function(d) { return x(barValue(d)); })
  .attr('stroke', 'white')
  .attr('fill', 'steelblue');
// bar value labels
barsContainer.selectAll("text").data(data).enter().append("text")
  .attr("x", function(d) { return x(barValue(d)); })
  .attr("y", yText)
  .attr("dx", 3) // padding-left
  .attr("dy", ".35em") // vertical-align: middle
  .attr("text-anchor", "start") // text-align: right
  .attr("fill", "black")
  .attr("stroke", "none")
  .text(function(d) { return d3.round(barValue(d), 2); });
// start line
barsContainer.append("line")
  .attr("y1", -gridChartOffset)
  .attr("y2", yScale.rangeExtent()[1] + gridChartOffset)
  .style("stroke", "#000");

}
    </script>
    <script id="csv" type="text/csv">STATE,PER
Jammu & Kashmir,	0
Himachal Pradesh,	0
Punjab,	0
Chandigarh,	0
Uttarakhand,	18.93
Haryana,	0
Delhi,	0
Rajasthan,	8.5
Uttar Pradesh,	12.02
Bihar,	13.49
Sikkim,	0
Arunachal Pradesh,	0
Nagaland,	10.52
Manipur,	12.57
Mizoram,31.14
Tripura,0
Meghalaya,0
Assam,18.53
West Bengal,	24.61
Jharkhand,12.93
Odisha,15.8
Chhattisgarh,9.41
Madhya Pradesh,13.16
Gujarat,21.82
Daman & Diu,	0
Dadra & Nagar Haveli,	0
Maharashtra,27.91
Andhra Pradesh,	0
Karnataka,	0
Goa,23.48
Lakshadweep,	15.23
Kerala,	47.18
Tamil Nadu,	47.18
Puducherry,	0
Andaman & Nicobar Islands,	30.3
</script>
    <script>renderChart();</script>
  </body>
</html>
